plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '7.0.2'
}

group = 'com.vk'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "com.openai:openai-java:2.16.0"
    implementation 'com.squareup.okhttp3:okhttp:5.1.0'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

node {
    version = '22.7.0'
    npmVersion = '10.8.2'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
    nodeProjectDir = file("${project.projectDir}/ui")
}

tasks.register('buildReact', NpmTask) {
    dependsOn tasks.named('npmInstall')
    args = ['run', 'build']
}

tasks.register('copyReactBuild', Copy) {
    dependsOn tasks.named('buildReact')
    from 'ui/dist'
    into 'src/main/resources/static'
}

processResources.dependsOn copyReactBuild